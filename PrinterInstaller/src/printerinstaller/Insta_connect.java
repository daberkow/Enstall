/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package printerinstaller;

import java.net.InetAddress;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Dan
 */
public class Insta_connect extends javax.swing.JDialog {

    /**
     * Creates new form Insta_connect
     */
    public Insta_connect(java.awt.Frame parent, boolean modal, String pass_printer) {
        super(parent, modal);
        initComponents();
        PritnerConnectLabel.setText("Connecting To" + pass_printer);
        
        SetableStatus.setText("Fetching Server List...");
        printercore Core_Code = new printercore(false);
        List<PrintServer> Holding_List = Core_Code.get_cached_printers();
        if (Holding_List == null)
        {
            SetableStatus.setText("Error Getting List... Please Close...");
            
        }else{
            SetableProgressBar.setValue(10);
            SetableStatus.setText("Comparing Server List to System...");
            String[] Servers_to_use = Core_Code.get_servers_string(Core_Code.scan_enviroment());

            List<PrintServer> Correct_servers = new ArrayList<PrintServer>();

            for (PrintServer single_server : Holding_List) // servers in list
            {
                for(String avaible_server: Servers_to_use) //servers this architecture should use
                {
                    for (InetAddress address : single_server.get_address())//OF all things holy, A TRIPLE UNCONTROLLED FOR LOOP
                    {
                        if (address.getHostName().equals(avaible_server))
                        {
                            Correct_servers.add(single_server);
                            break;
                        }
                    }
                }
            }
            
            
            int kittens = 5;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StatusLabel = new javax.swing.JLabel();
        Cancel_Button = new javax.swing.JButton();
        PritnerConnectLabel = new javax.swing.JLabel();
        SetableProgressBar = new javax.swing.JProgressBar();
        SetableStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(300, 200));
        setPreferredSize(new java.awt.Dimension(300, 200));
        setResizable(false);

        StatusLabel.setText("Status:");

        Cancel_Button.setText("Cancel");

        PritnerConnectLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PritnerConnectLabel.setText("Connecting To");

        SetableStatus.setText("Starting...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SetableProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Cancel_Button))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(StatusLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SetableStatus))
                            .addComponent(PritnerConnectLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(PritnerConnectLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusLabel)
                    .addComponent(SetableStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SetableProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(Cancel_Button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insta_connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insta_connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insta_connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insta_connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Insta_connect dialog = new Insta_connect(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel_Button;
    private javax.swing.JLabel PritnerConnectLabel;
    private javax.swing.JProgressBar SetableProgressBar;
    private javax.swing.JLabel SetableStatus;
    private javax.swing.JLabel StatusLabel;
    // End of variables declaration//GEN-END:variables
}
